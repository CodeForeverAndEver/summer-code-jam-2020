name: Django CI

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install & Configure Poetry
      run: |
        python get-poetry.py -y --preview
        source $HOME/.poetry/env
        echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"
        poetry config virtualenvs.in-project true
      working-directory: ./glossy-gorillas
    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
    - name: Upgrade pip
      shell: bash
      run: poetry run python -m pip install pip -U
      working-directory: ./glossy-gorillas
    - name: Install Dependencies
      run: poetry install
      working-directory: ./glossy-gorillas
    - name: Run Tests
      run: poetry run python -m pytest -v tests
      working-directory: ./glossy-gorillas
